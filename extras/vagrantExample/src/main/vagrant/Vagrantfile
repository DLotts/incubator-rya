# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# -*- mode: ruby -*-
# vi: set ft=ruby :

# Note: Machine's ip is 192.168.33.10
# username : vagrant
# password : vagrant
#
# accumulo instance : dev
# accumulo username : root
# accumulo password : root

Vagrant.configure(2) do |config|

  config.vm.box = "ubuntu/trusty64"

  config.vm.provider "virtualbox" do |vb|
    vb.name = "rya-example-box"
    vb.memory = "4096"
	vb.cpus = 4
  end

  config.vm.network :private_network, ip: "192.168.33.10"
  config.vm.hostname = "rya-example-box"

  config.vm.provision "shell", inline: <<-SHELL
    echo "Updating host file with permanent ip"
	sudo sed -i 's/127.0.1.1/192.168.33.10/' /etc/hosts
    cat >> /etc/hosts <<EOF
192.168.33.10 zoo1 zoo2 zoo3
EOF

    sudo apt-get update
    
    echo "Installing Sun Java..."
    sudo add-apt-repository ppa:webupd8team/java
    sudo apt-get update
    echo debconf shared/accepted-oracle-license-v1-1 select true | \
      sudo /usr/bin/debconf-set-selections
    echo debconf shared/accepted-oracle-license-v1-1 seen true | \
      sudo /usr/bin/debconf-set-selections
    sudo apt-get install -y oracle-java8-installer
    sudo ln --force -s /usr/lib/jvm/java-8-oracle/ /usr/lib/jvm/default-java
    
    echo "Installing Tomcat..."
    sudo apt-get install -y tomcat7
    
    echo "Installing Unzip..."
    apt-get install unzip

    # List of dependency versions
    ACCUMULO_VERSION=1.6.5

    echo "Setting up environment..."
    export JAVA_HOME=/usr/lib/jvm/java-8-oracle
    export HADOOP_HOME=/home/vagrant/${hadoopFolder}
    export ZOOKEEPER_HOME=/home/vagrant/${zookeeperFolder}
    export ACCUMULO_HOME=/home/vagrant/accumulo-$ACCUMULO_VERSION
    export PATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin:$ACCUMULO_HOME/bin

    export HADOOP_PREFIX="$HADOOP_HOME"
    export HADOOP_CONF_DIR="$HADOOP_PREFIX/conf"
    export ACCUMULO_LOG_DIR=$ACCUMULO_HOME/logs
    export ACCUMULO_TSERVER_OPTS="-Xmx384m -Xms384m "
    export ACCUMULO_MASTER_OPTS="-Xmx128m -Xms128m"
    export ACCUMULO_MONITOR_OPTS="-Xmx64m -Xms64m"
    export ACCUMULO_GC_OPTS="-Xmx64m -Xms64m"
    export ACCUMULO_GENERAL_OPTS="-XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -Djava.net.preferIPv4Stack=true"
    export ACCUMULO_OTHER_OPTS="-Xmx128m -Xms64m"
    export ACCUMULO_KILL_CMD='kill -9 %p'

    cat >> /home/vagrant/.bashrc <<EOF
        export JAVA_HOME=/usr/lib/jvm/java-8-oracle
        export HADOOP_HOME=/home/vagrant/${hadoopFolder}
        export ZOOKEEPER_HOME=/home/vagrant/${zookeeperFolder}
        export ACCUMULO_HOME=/home/vagrant/accumulo-$ACCUMULO_VERSION
        export PATH=$PATH:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin:$ACCUMULO_HOME/bin

        export HADOOP_PREFIX="$HADOOP_HOME"
        export HADOOP_CONF_DIR="$HADOOP_PREFIX/conf"
        export ACCUMULO_LOG_DIR=$ACCUMULO_HOME/logs
        export ACCUMULO_TSERVER_OPTS="-Xmx384m -Xms384m "
        export ACCUMULO_MASTER_OPTS="-Xmx128m -Xms128m"
        export ACCUMULO_MONITOR_OPTS="-Xmx64m -Xms64m"
        export ACCUMULO_GC_OPTS="-Xmx64m -Xms64m"
        export ACCUMULO_GENERAL_OPTS="-XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -Djava.net.preferIPv4Stack=true"
        export ACCUMULO_OTHER_OPTS="-Xmx128m -Xms64m"
        export ACCUMULO_KILL_CMD='kill -9 %p'
EOF

    
    echo "Acquiring and Extracting ..."
    ### curl --fail causes curl to treat http status >= 400 as an error. -L follow redirects status>=300
    echo "- Hadoop"
	hadoopFolder=hadoop-1.2.1
	hadoopUrl=http://apache.mirrors.tds.net/hadoop/common/hadoop-1.2.1/hadoop-1.2.1.tar.gz
	if [[ ! -d $hadoopFolder ]] ; then 
		echo "Downloading $hadoopUrl"
		curl --silent --show-error --fail -L $hadoopUrl \
		| tar -zxC /home/vagrant || exit 101
	fi

    echo "- Zookeeper"
	zookeeperFolder=zookeeper-3.4.5-cdh4.5.0
	zookeeperUrl=http://archive-primary.cloudera.com/cdh4/cdh/4/zookeeper-3.4.5-cdh4.5.0.tar.gz
	if [[ ! -d $zookeeperFolder ]] ; then
		echo "Downloading $zookeeperUrl"
		curl --silent --show-error --fail -L $zookeeperUrl \
		| tar -zxC /home/vagrant || exit 102
    fi
	
    echo "- Accumulo"
	accumuloUrl=http://apache.mirrors.pair.com/accumulo/$ACCUMULO_VERSION/accumulo-$ACCUMULO_VERSION-bin.tar.gz
	if [[ ! -d ${ACCUMULO_HOME} ]] ; then
		echo "Downloading $accumuloUrl"
		curl --silent --show-error --fail -L $accumuloUrl \
		| tar -zxC /home/vagrant || exit 103
	fi
    
    echo "Configuring Zookeeper..."
    sudo mkdir --parents /var/zookeeper
    sudo chown vagrant:vagrant /var/zookeeper

    echo "Running Zookeeper..."
    cp ${zookeeperFolder}/conf/zoo_sample.cfg ${zookeeperFolder}/conf/zoo.cfg
    sudo ${zookeeperFolder}/bin/zkServer.sh start
    
    echo "Configuring Accumulo..."
    cp accumulo-$ACCUMULO_VERSION/conf/examples/1GB/standalone/* accumulo-$ACCUMULO_VERSION/conf/
    rm --force accumulo-$ACCUMULO_VERSION/conf/accumulo-site.xml
    cat >> accumulo-$ACCUMULO_VERSION/conf/accumulo-site.xml <<EOF
        <configuration>
            <property><name>instance.dfs.uri</name><value>file:///</value></property>
            <property><name>instance.dfs.dir</name><value>/data/accumulo</value></property>
            <property><name>instance.zookeeper.host</name><value>localhost:2181</value></property>
            <property><name>instance.secret</name><value>DONTTELL</value></property>
            <property><name>tserver.port.search</name><value>true</value></property>
            <property><name>logger.dir.walog</name><value>/data/accumulo/walogs</value></property>
            <property><name>tserver.cache.data.size</name><value>15M</value></property>
            <property><name>tserver.cache.index.size</name><value>15M</value></property>
            <property><name>tserver.memory.maps.max</name><value>256M</value></property>
            <property><name>tserver.walog.max.size</name><value>256M</value></property>
            <property><name>tserver.memory.maps.native.enabled</name><value>false</value></property>
            <property><name>trace.token.property.password</name><value>root</value></property>
            <property><name>gc.cycle.delay</name><value>4s</value></property>
            <property><name>gc.cycle.start</name><value>0s</value></property>
            <property><name>tserver.compaction.major.delay</name><value>3</value></property>
            <property><name>general.classpaths</name><value>
            /data/accumulo/lib/[^.].*.jar,
            /home/vagrant/${hadoopFolder}/share/hadoop/common/.*.jar,
            /home/vagrant/${hadoopFolder}/share/hadoop/common/lib/.*.jar,
            /home/vagrant/${hadoopFolder}/share/hadoop/hdfs/.*.jar,
            /home/vagrant/${hadoopFolder}/share/hadoop/mapreduce/.*.jar,
            /home/vagrant/${hadoopFolder}/share/hadoop/yarn/.*.jar,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/server/target/classes/,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/lib/accumulo-server.jar,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/core/target/classes/,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/lib/accumulo-core.jar,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/start/target/classes/,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/lib/accumulo-start.jar,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/fate/target/classes/,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/lib/accumulo-fate.jar,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/proxy/target/classes/,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/lib/accumulo-proxy.jar,
            /home/vagrant/accumulo-$ACCUMULO_VERSION/lib/[^.].*.jar,
            /home/vagrant/${zookeeperFolder}/zookeeper[^.].*.jar,
            $HADOOP_CONF_DIR,
            /home/vagrant/${hadoopFolder}/[^.].*.jar,
            /home/vagrant/${hadoopFolder}/lib/[^.].*.jar,
            </value></property>
            <property><name>general.dynamic.classpaths</name><value>/data/accumulo/lib/ext/[^.].*.jar</value></property>
            <property><name>trace.port.client</name><value>0</value></property>
            <property><name>monitor.port.client</name><value>0</value></property>
            <property><name>master.port.client</name><value>0</value></property>
            <property><name>tserver.port.client</name><value>0</value></property>
            <property><name>gc.port.client</name><value>0</value></property>
        </configuration>
EOF
    cat > accumulo-$ACCUMULO_VERSION/conf/masters <<EOF
rya-example-box
EOF

	cat > accumulo-$ACCUMULO_VERSION/conf/slaves <<EOF
rya-example-box
EOF
    sudo mkdir --parents /data
    sudo chown vagrant:vagrant /data
    mkdir --parents /data/accumulo/lib/ext

    echo "Starting Accumulo..."
    accumulo-$ACCUMULO_VERSION/bin/accumulo init --instance-name dev --password root
    accumulo-$ACCUMULO_VERSION/bin/start-all.sh

    echo 'Done!'

	echo "Installing Sesame Server"
	# creating log dir sesame-http-server-2.7.6
	sudo mkdir --parents /usr/share/tomcat7/.aduna 
	sudo chown -R tomcat7:tomcat7 /usr/share/tomcat7  
    sudo ln --force -s /usr/share/tomcat7/.aduna/openrdf-sesame/logs /var/log/tomcat7/openrdf-sesame
	sesamewar=/var/lib/tomcat7/webapps/openrdf-sesame.war
	if [[ ! -s $sesamewar ]] ; then 
		echo "Downloading"
		sudo curl --silent --show-error --fail -L --output $sesamewar http://repo1.maven.org/maven2/org/openrdf/sesame/sesame-http-server/2.7.6/sesame-http-server-2.7.6.war || exit 110
	fi
	echo "Sesame http server deployed at http://rya-example-box:8080/openrdf-sesame"
	
	echo "Installing Sesame Workbench"
	workbench=/var/lib/tomcat7/webapps/openrdf-workbench.war
	if [[ ! -s $workbench ]] ; then 
		echo "Downloading"
		sudo curl --silent --show-error --fail -L --output $workbench http://repo1.maven.org/maven2/org/openrdf/sesame/sesame-http-workbench/2.7.6/sesame-http-workbench-2.7.6.war || exit 111
	fi
	echo "Sesame workbench deployed at http://rya-example-box:8080/openrdf-workbench"

	echo "Installing Rya"
	ryaIndexing=rya.indexing.example-3.2.10-SNAPSHOT-distribution
	if [[ ! -s ${ryaIndexing}.zip ]] ; then
		# Right now it's on dropbox, but eventually it'll be on maven...
		echo "Downloading quietly..."
		sudo curl --silent --show-error --fail -L --output ${ryaIndexing}.zip https://www.dropbox.com/s/7e74yiuq4jmu0od/${ryaIndexing}.zip?dl=0  || exit 112
	fi
	sudo mkdir --parents ${ryaIndexing}
	sudo unzip -o ${ryaIndexing}.zip -d ${ryaIndexing}
	
	# soft linking the files doesn't seem to work in tomcat, so we copy them instead :(
	sudo cp ${ryaIndexing}/dist/lib/* /var/lib/tomcat7/webapps/openrdf-workbench/WEB-INF/lib/
	sudo cp ${ryaIndexing}/dist/lib/* /var/lib/tomcat7/webapps/openrdf-sesame/WEB-INF/lib/

	# These are older libs that breaks tomcat 7
	sudo rm --force /var/lib/tomcat7/webapps/openrdf-workbench/WEB-INF/lib/servlet-api-2.5.jar
	sudo rm --force /var/lib/tomcat7/webapps/openrdf-workbench/WEB-INF/lib/jsp-api-2.1.jar
	sudo rm --force /var/lib/tomcat7/webapps/openrdf-sesame/WEB-INF/lib/servlet-api-2.5.jar
	sudo rm --force /var/lib/tomcat7/webapps/openrdf-sesame/WEB-INF/lib/jsp-api-2.1.jar
	
	sudo chown -R tomcat7:tomcat7 /var/lib/tomcat7/webapps/openrdf-workbench/WEB-INF/lib/
	sudo chown -R tomcat7:tomcat7 /var/lib/tomcat7/webapps/openrdf-sesame/WEB-INF/lib/

	echo "Downloading and installing new templates for OpenRdf WorkBench"
	ryaVagrant=rya.vagrant.example-3.2.10-SNAPSHOT
	if [[ ! -s ${ryaVagrant}.jar ]] ; then
		echo "Downloading"
		sudo curl --silent --show-error --fail -L -O https://www.dropbox.com/s/dgw63m66nubyy4z/${ryaVagrant}.jar || exit 120
	fi
	sudo mkdir --parents ${ryaVagrant}
	sudo unzip -o ${ryaVagrant}.jar -d ${ryaVagrant}
	sudo cp ${ryaVagrant}/*.xsl /var/lib/tomcat7/webapps/openrdf-workbench/transformations/
	
	echo "Deploying Rya Web"
	ryaWar=web.rya-3.2.10-SNAPSHOT.war
	if [[ ! -s ${ryaWar} ]] ; then
		echo "Downloading"
		sudo curl --silent --show-error --fail -L https://www.dropbox.com/s/332wr4b2f34dp6e/${ryaWar}?dl=0 --output ${ryaWar} || exit 121
	fi
	sudo cp ${ryaWar} /var/lib/tomcat7/webapps/web.rya.war
	# Wait for the war to deploy
	sudo sleep 10
	# These are older libs that breaks tomcat 7
	sudo rm --force /var/lib/tomcat7/webapps/web.rya/WEB-INF/lib/servlet-api-2.5*.jar
	sudo rm --force /var/lib/tomcat7/webapps/web.rya/WEB-INF/lib/jsp-api-2.1.jar

	echo "Modify Rya Web Config"
	cat > /var/lib/tomcat7/webapps/web.rya/WEB-INF/classes/environment.properties <<EOF
instance.name=dev
instance.zk=localhost:2181
instance.username=root
instance.password=root
rya.tableprefix=rya_
rya.displayqueryplan=true
EOF

	echo "Rya web deployed at http://rya-example-box:8080/web.rya/sparqlQuery.jsp"
	
	# restart tomcat
	sudo service tomcat7 restart
	
	
  SHELL

end
